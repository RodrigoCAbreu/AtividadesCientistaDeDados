setwd("~/ProjetosCientistaDeDados/BigDataRAzure/Cap13")
install.packages("mlbench")
library(mlbench)
?HouseVotes84
data("HouseVotes84")
View(HouseVotes84)
plot(as.factor(HouseVotes84[,2]))
title(main = "Votes cast for issue", xlab = "vote", ylab = "# reps")
plot(as.factor(HouseVotes84[HouseVotes84$Class == 'republican', 2]))
title(main = "Republican votes cast for issue 1", xlab = "vote", ylab = "# reps")
plot(as.factor(HouseVotes84[HouseVotes84$Class == 'democrat',2]))
title(main = "Democrat votes cast for issue 1", xlab = "vote", ylab = "# reps")
na_by_col_class <- function (col,cls){return(sum(is.na(HouseVotes84[,col]) & HouseVotes84$Class==cls))}
na_by_col_class
p_y_col_class <- function(col,cls){
sum_y <- sum(HouseVotes84[,col] == 'y' & HouseVotes84$Class == cls, na.rm = TRUE)
sum_n <- sum(HouseVotes84[,col] == 'n' & HouseVotes84$Class == cls, na.rm = TRUE)
return(sum_y/(sum_y+sum_n))}
p_y_col_class
p_y_col_class(2,'democrat')
p_y_col_class(2,'republican')
na_by_col_class(2,'democrat')
na_by_col_class(2,'republican')
for (i in 2:ncol(HouseVotes84)) {
if(sum(is.na(HouseVotes84[,i])>0)) {
c1 <- which(is.na(HouseVotes84[,i]) & HouseVotes84$Class == 'democrat',arr.ind = TRUE)
c2 <- which(is.na(HouseVotes84[,i]) & HouseVotes84$Class == 'republican',arr.ind = TRUE)
HouseVotes84[c1,i] <- ifelse(runif(na_by_col_class(i,'democrat'))<p_y_col_class(i,'democrat'),'y','n')
HouseVotes84[c2,i] <- ifelse(runif(na_by_col_class(i,'republican'))<p_y_col_class(i,'republican'),'y','n')}
}
HouseVotes84[,"train"] <- ifelse(runif(nrow(HouseVotes84)) < 0.80,1,0)
trainColNum <- grep("train",names(HouseVotes84))
trainHouseVotes84 <- HouseVotes84[HouseVotes84$train == 1, -trainColNum]
testHouseVotes84 <- HouseVotes84[HouseVotes84$train == 0, -trainColNum]
install.packages("e1071")
library(e1071)
?naiveBayes
trainModel <- naiveBayes(class ~ ., data = trainHouseVotes84)
trainHouseVotes84
class(trainHouseVotes84)
model <- naiveBayes(Class ~ ., data = HouseVotes84)
predict(model, HouseVotes84[1:10,])
predict(model, HouseVotes84[1:10,], type = "raw")
trainModel <- naiveBayes(class ~ ., data = trainHouseVotes84)
trainModel <- naiveBayes(Class ~ ., data = trainHouseVotes84)
nb_model
summary(nb_model)
str(nb_model)
trainModel
summary(trainModel)
str(trainModel)
nb_test_predict <- predict(nb_model, testHouseVotes84[,-1])
nb_test_predict <- predict(trainModel, testHouseVotes84[,-1])
table(pred = nb_test_predict, true = testHouseVotes84$Class)
mean(nb_test_predict == testHouseVotes84$Class)
dados_treino <- read.csv('datasets/titanic-train.csv')
dados_treino <- read.csv(choose.files())
View(dados_treino)
