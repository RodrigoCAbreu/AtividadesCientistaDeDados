setwd("~/ProjetosCientistaDeDados/BigDataRAzure/Cap03")
hoje <- Sys.Date()
hoje
class(hoje)
Sys.time()
Sys.timezone()
as.Date("2018-06-28")
as.Date("Jun-28-18", format = "%b-%d-%y")
as.Date("28 June, 2018", format = "%d %B, %Y")
Sys.Date()
format(Sys.Date(), format = "%d %B, %Y")
format(Sys.Date(), format = "Hoje é %A!")
date1 <- "Jun 13, '96 hours:23 minutes:01 seconds:45"
date1_convert <- as.POSIXct(date1, format = "%B %d, '%y hours:%H minutes:%M seconds:%S")
date1_convert
# Operações com Datas
data_de_hoje <- as.Date("2016-06-25", format = "%Y-%m-%d")
data_de_hoje
data_de_hoje + 1
my_time <- as.POSIXct("2016-05-14 11:24:134")
my_time
my_time + 1
data_de_hoje - as.Date(my_time)
dts = c(1127056501,1104295502,1129233601,1113547501,1119826801,1132519502,1125298801,1113289201)
mydates = dts
mydates = structure(dts, class = c('POSIXt','POSIXct'))
mydates
b1 = ISOdate(2011,3,23)
b1
b2 = ISOdate(2012,9,19)
b2
b2 - b1
difftime(b2, b1, units = 'weeks')
install.packages("lubridate")
require(lubridate)
require(lubridate)
ymd("20180604")
mdy("06-04-2018")
sono <- data.frame(bed.time = ymd_hms("2013-09-01 23:05:24", "2013-09-02 22:51:09",
"2013-09-04 00:09:16", "2013-09-04 23:43:31", "2013-09-06 00:17:41", "2013-09-06 22:42:27",
"2013-09-08 00:22:27"), rise.time = ymd_hms("2013-09-02 08:03:29", "2013-09-03 07:34:21",
"2013-09-04 07:45:06", "2013-09-05 07:07:17", "2013-09-06 08:17:13", "2013-09-07 06:52:11",
"2013-09-08 07:15:19"), sleep.time = dhours(c(6.74, 7.92, 7.01, 6.23, 6.34, 7.42, 6.45)))
sono
sono$eficiencia <- round(sono$sleep.time/(sono$rise.time - sono$bed.time) * 100, 1)
sono
par(mar = c(5, 4, 4, 4))
plot(round_date(sono$rise.time, "day"), sono$eficiencia, type = "o", col = "blue", xlab = "Manhã", ylab = NA)
par(new = TRUE)
plot(round_date(sono$rise.time, "day"), sono$sleep.time/3600, type = "o", col = "red", axes = FALSE, ylab = NA, xlab = NA)
axis(side = 4)
mtext(side = 4, line = 2.5, col = "red", "Duração do Sono")
mtext(side = 2, line = 2.5, col = "blue", "Eficiência do Sono")
lista1 <- list(a=(1:20), b=(45:77))
sapply(lista1, sum)
dir()
dir("../")
str <- c(a:e)
log <- c(TRUE, FALSE, TRUE, FALSE, FALSE)
num <- c(1:5)
str <- c("a:e")
str
str <- c("a","b","c","d","e")
str
df <- data.frame(str,log,num)
df
vec1 <- c(12, 3, 4, 19, 34)
vec1
ifelse( vec1 > 10, vec1 "É maior do que 10")
ifelse( vec1 > 10,"É maior do que 10")
ifelse( vec1 > 10,"É maior do que 10",)
ifelse( vec1 > 10,"É maior do que 10","")
ifelse( vec1 > 10,"vec1 É maior do que 10","")
for (i in 1:35) {
if (vec1 > 10) {
print(vec1,"Esse número é maior do que 10")
}
}
for (i in 1:35) {
if (vec1 > 10) {
print(vec1)
}
}
for (i in 1:5) {
ifelse (vec1[i] > 10,vec1[i]+"É maior do que 10",NA)
}
for (i in 1:5) {
ifelse (vec1[i] > 10,vec1[i],NA)
}
for (i in 1:5) {
vec1[i]
}
for (i in 1:5) {
print(vec1[i])
}
for (i in 1:5) {
print(vec1[i]+"É maior")
}
for (i in 1:5) {
ifelse(vec1[i] > 10,print(vec1[i]),NA)
}
?print
for (i in 1:length(vec1)) {
if(vec1[i] > 10){
print(vec1[i])
print("Esse Elemento é maior do que 10")
} else {NA}
}
for (i in 1:length(vec1)) {
if(vec1[i] > 10){
print(vec1[i]) print("Esse Elemento é maior do que 10")
} else {NA}
}
for (i in 1:length(vec1)) {
if(vec1[i] > 10){
print(vec1[i])
print("Esse Elemento é maior do que 10")
} else {NA}
}
lst2 <- list(2, 3, 5, 7, 11, 13)
lst2
vec2 <- c(lst2)
vec2
lst2 <- list(2, 3, 5, 7, 11, 13)
lst2
for (i in 1:length(lst2)){
print(lst2[[i]])
}
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1
mat2 <- t(mat1)
mat2
mat1*mat2
mat1%*%mat2
vetor <- c(1:10)
vetor
vec3 <- c(1:9)
mt <- matrix(vec3,  nrow = 3, ncol = 3, byrow = T)
mt
lista <- list(c(1:9))
lista
df <- data.frame(vetor,mt,lista)
df <- data.frame(1,2,3)
?sample
mat2 <- matrix(1:90, 10)
mat2
sample(mat2,replace = NA)
sample(mat2,replace = TRUE)
sample(mat2,replace = TRUE)
sample(mat2,replace = TRUE)
mat2[sample(1:50,30)] = NA
mat2
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1
rowsum(mat1)
rowSums(mat1)
colSums(mat1)
a <- c(100, 10, 10000, 1000)
a
order(a)
a
a[order(a)]
